<%- include('../users/layouts/header.ejs')%>



    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
        }

        .container {
            background-color: #f1f1f1;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            text-align: center;
            padding: 20px;
            max-width: 400px;
            /* Adjust the maximum width as needed */
            width: 100%;
        }

        .login-box {
            max-width: 300px;
            margin: 0 auto;
        }

        h1 {
            font-size: 24px;
        }

        .input-container {
            text-align: left;
            margin-bottom: 10px;
        }

        label {
            display: block;
            font-weight: bold;
        }

        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        button {
            background-color: #EC7E3B;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            cursor: pointer;
            width: 100%;
            /* Make the button width 100% */
            margin-top: 15px;
        }

        button:hover {
            background-color: #d2631e;
        }

        .timer {
            margin-top: 15px;
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            h1 {
                font-size: 20px;
            }
        }
    </style>
    </head>

    <body>
        <div class="container">
            <div class="login-box">
                <h1> OTP VERIFICATION</h1>
                <% if(typeof message !=='undefined' ){ %>
                    <div id="invalid-msg" class="alert  text-danger text-center">
                        <h5><%- message %></h5>
                    </div>
                    <% } %>
                        <form action="/userOtp" method="POST">
                            <div class="input-container">
                                <label for="username">Verify Otp</label>
                                <input type="text" id="otp" name="otp" placeholder="Enter Otp" required>
                            </div>

                            <button type="submit">Verify & Proceed</button>
                            <p class="text-primary mt-3">Time left: <span id="timer">30</span> seconds</p>
                            <button class="btn " id="resendButton" onclick="resendOTP()"><a
                                    href="/resend-otp">Resend OTP</a></button>

                        </form>
            </div>
        </div>
    </body>






    <script>
        let countdown = 30; // Initial countdown value in seconds
        let timerElement = document.getElementById('timer');
        let resendButton = document.getElementById('resendButton');
        let countdownInterval;

        // Function to update the countdown timer
        function updateTimer() {
            timerElement.textContent = countdown + ' seconds';
            countdown--;
            resendButton.disabled = true;
            if (countdown < 0) {
                clearInterval(countdownInterval);
                timerElement.textContent = '0 seconds';
                resendButton.disabled = false;
            }
        }

        // Function to resend OTP
        function resendOTP() {
            // Simulate OTP resend logic here
            // For example, you can make an API call to send a new OTP

            // Reset the timer
            countdown = 30;
            timerElement.textContent = countdown + ' seconds';
            resendButton.disabled = true;

            // Start the countdown again
            countdownInterval = setInterval(updateTimer, 1000);
        }

        // Initial countdown start
        countdownInterval = setInterval(updateTimer, 1000);


        // This code will execute after the HTML has been rendered.
  setTimeout(function () {
    // Your code to hide the message after a delay goes here
    var invalidMsg = document.getElementById("invalid-msg");
    if (invalidMsg) {
      invalidMsg.style.display = "none";
    }
  }, 3000); // 3000 milliseconds (3 seconds) delay

    </script>


    <%- include('../users/layouts/footer.ejs')%>