<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>MLIVE</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="icon" type="image/png" href="/static/extraImages/favicon.ico"/>


    <style>
        body {
    color: #F7F7F7;
    background: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    margin: 0;
}

.form-control {
    min-height: 41px;
    background: #f2f2f2;
    box-shadow: none !important;
    border: transparent;
}

.form-control:focus {
    background: #e2e2e2;
}

.form-control,
.btn {
    border-radius: 5px;
}

.signup-form {
    width: 350px;
    text-align: center;
    padding: 30px;
}

.signup-form h2 {
    margin: 10px 0 25px;
}

.signup-form .btn {
    font-size: 16px;
    font-weight: bold;
    background: #0e1111;
    border: none;
    outline: none !important;
}

.signup-form .btn:hover,
.signup-form .btn:focus {
    background: #000000;
}

.signup-form a {
    color: #000;
    text-decoration: underline;
}

.signup-form a:hover {
    text-decoration: none;
}

.signup-form form a {
    color: #000;
    text-decoration: none;
}

.signup-form form a:hover {
    text-decoration: underline;
}

.login_botten_tag {
    text-decoration: none;
}

a {
    text-decoration: none;
    color: inherit;
}

@media (max-width: 600px) {
    .signup-form {
        width: 80%;
    }
}

.hai {
    padding-left: 10% !important;
    padding-bottom: 5% !important;
}
.signup-form {
    margin-left: 20px; /* Adjust the margin to move it to the right of the image */
}
.form-control {
    border-radius: 10px; /* Add a curved dark border to input fields */
    margin-bottom: 10px; /* Add space between input fields */
}
@media (max-width: 1000px) {
    .hihi {
        display: none !important; /* Hide the image on screens below 100px width */
    }
}
/* .input-with-border {
    border: 1px solid black;
} */
.sizeForImage{
    width: 25vh;
}
.sizeorImage{
    width: 75vh;
}

.input-control input:focus {
    outline: 0;
    border-color: #09c372; /* Change the border color when focused */
}

.input-control.success input {
    border-color: #09c372;
}

.input-control.error input {
    border-color: #ff3860;
}

.input-control {
    position: relative;
}

.error {
    position: absolute;
    left: 14px;
    top: 100%; /* Position the error message below the input */
    color: red;
    font-size: 10px;
}
/* You can add additional styles as needed */
    </style>
    
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-md-6 d-none d-md-block hihi pt-4">
              <img  src="/static/extraImages/loginPage.jpg" alt="Your Photo" class="img-fluid" style="width:75vh; padding-top: 113px;">
            </div>
            <div class="col-md-6 col-12 pl-5 hai">
                <div class="signup-form mt-3">
                    

                    <div class="logoimg pb-1 d-flex justify-content-start">
                    
                        <p style="color: #000; font-weight:bold ; font-size: 38px;"> Sign Up</p>
                        
                        
                </div>
                <form action="/register" method="post" id="form" >
                       
                        <div class="input-control mt-3 ">
                            <input type="text" id="Fname" class="form-control input-with-border mb-0" name="Fname" placeholder="First Name">
                            <div class="error-message d-flex" style="color: red; padding-left: 8px; padding-top: 2px;"></div>

                        </div>
                        <div class="input-control mt-3">
                            <input type="text" id="Lname" class="form-control input-with-border mb-0" name="Lname" placeholder="Last Name">
                            <div class="error-message d-flex" style="color: red; padding-left: 8px; padding-top: 2px;"></div>

                        </div>
                        <div class="input-control mt-3 ">
                            <input type="email" id="email" class="form-control input-with-border mb-0" name="email" placeholder="Email">
                            <div id="emailErrorMessage" style="color: red; font-size: 12px; font-weight: 300; display: flex; padding-left: 8px; padding-top: 2px;"></div>
                            <div class="error-message d-flex" style="color: red; padding-left: 8px; padding-top: 2px;"></div>
                        </div>
                        <div class="input-control mt-3 ">
                            <input type="tel" id="mobile" class="form-control input-with-border border-dark mb-0" name="mobile" placeholder="Phone Number">
                            <div id="mobileErrorMessage" style="color: red; font-size: 12px; font-weight: 300; display: flex; padding-left: 8px; padding-top: 2px;"></div>
                            <div class="error-message d-flex" style="color: red; padding-left: 8px; padding-top: 2px;"></div>
                        </div>
                        <div class="input-control mt-3 ">
                            <input type="password" id="password" class="form-control input-with-border mb-0" name="password" placeholder="Password">
                            <div class="error-message d-flex" style="color: red; padding-left: 8px; padding-top: 2px;"></div>
                        </div>
                        <div class="input-control mt-3 ">
                            <input type="password" id="Cpassword" class="form-control input-with-border mb-0" name="Cpassword" placeholder="Confirm Password">
                            <div class="error-message d-flex" style="color: red; padding-left: 8px; padding-top: 2px;"></div>                        
                        </div>
                            
                        <div class="form-group">
                            <a id="kkkk" class="login_botten_tag">
                                <button  type="submit" class="btn btn-block mt-4 bg-dark buttensignup text-white">Sign Up</button>
                            </a>
                        </div>
                        <p class="text-center text-dark small">Already have an account? <a class="text-dark" href="/login">Login here!</a></p>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>

document.addEventListener('DOMContentLoaded', function () {
      const form = document.getElementById('form');
      const fnameInput = document.getElementById('Fname');
      const lnameInput = document.getElementById('Lname');
      const emailInput = document.getElementById('email');
      const mobileInput = document.getElementById('mobile');
      const passwordInput = document.getElementById('password');
      const cpasswordInput = document.getElementById('Cpassword');
      const errorMessages = document.querySelectorAll('.error-message');

      // Email regex pattern
      var emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/;

      // Mobile number regex pattern
      var phoneRegex = /^(?!^(\d)\1{9}$)\d{10}$/;

      form.addEventListener('submit', function (event) {
          let isValid = true;
          errorMessages.forEach(function (element) {
          element.innerText = '';
          element.style.fontSize = '10px';
  });

        if (fnameInput.value.trim() === '') {
          errorMessages[0].innerText = 'First Name is required.';
          isValid = false;
        }

        if (lnameInput.value.trim() === '') {
          errorMessages[1].innerText = 'Last Name is required.';
          isValid = false;
        }

        if (emailInput.value.trim() === '') {
          errorMessages[2].innerText = 'Email is required.';
          isValid = false;
        } else if (!emailRegex.test(emailInput.value.trim())) { // Check email format using regex
          errorMessages[2].innerText = 'Email is not valid. (e.g., example@gmail.com)';
          isValid = false;
        }

        if (mobileInput.value.trim() === '') {
          errorMessages[3].innerText = 'Mobile is required.';
          isValid = false;
        } else if (!phoneRegex.test(mobileInput.value.trim())) { // Check mobile format using regex
          errorMessages[3].innerText = 'Please enter a valid 10-digit mobile number.';
          isValid = false;
        }

        if (passwordInput.value.length < 5) {
          errorMessages[4].innerText = 'Password must be at least 5 characters long.';
          isValid = false;
        } else if (!/[^a-zA-Z0-9]/.test(passwordInput.value) || passwordInput.value.includes(' ')) {
          errorMessages[4].innerText = 'Password must contain at least one special character and cannot contain spaces.';
          isValid = false;
        }

        if (cpasswordInput.value === '') {
          errorMessages[5].innerText = 'Confirm Password is required.';
          isValid = false;
        } else if (cpasswordInput.value !== passwordInput.value) {
          errorMessages[4].innerText = 'Passwords do not match.';
          errorMessages[5].innerText = 'Passwords do not match.';
          isValid = false;
        }

        if (!isValid) {
    event.preventDefault(); // Prevent form submission if there are validation errors
  }
});

      // Real-time validation
      const inputElements = [fnameInput, lnameInput, emailInput, mobileInput, passwordInput, cpasswordInput];

      inputElements.forEach((input, index) => {
        input.addEventListener('input', function () {
          errorMessages[index].innerText = '';
        });
      });

      passwordInput.addEventListener('input', function () {
        const passwordValue = passwordInput.value;
        errorMessages[4].innerText = '';

        if (passwordValue.length < 5) {
          errorMessages[4].innerText = 'Password must be at least 5 characters long.';
        } else if (!/[^a-zA-Z0-9]/.test(passwordValue) || passwordValue.includes(' ')) {
          errorMessages[4].innerText = 'Password must contain at least one special character and cannot contain spaces.';
        }
      });
    });
 
    // <!-- ===============================================================ajaxRequest========================================================================== -->

   $(document).ready(function () {
  $("#form").submit(function (event) {
    event.preventDefault();
    var formData = $(this).serialize();

    $.ajax({
      type: "POST",
      url: "/register",
      data: formData,
      success: function (response) {
        console.log(response);

        // Clear previous error messages
        $("#emailErrorMessage, #mobileErrorMessage").text('');

        // Check for server-side validation errors
        if (response.emailError) {
          $("#emailErrorMessage").text(response.emailError);
        }

        if (response.mobileError) {
          $("#mobileErrorMessage").text(response.mobileError);
        }

        // Check if the form is valid before redirecting
        if (response.message === "Success") {
  
            window.location.href = "/userOtp";
 
        }
      },
      error: function (error) {
        console.log("Error:", error);
      }
    });
  });
});



  </script>


    



</html>





